: sq dup * ;
: double 2 * ;
: seq 1 2 3 4 ;
{ 4 5 4 5 } #
clear
4 { 5 8 } 1 #n +
clear
{ 6 3 } [ 0 #n ] [ # ] bi /
clear
5 { 4 [ 6 + ] } 1 #n I
clear
5 { [ 10 + ] 4 } 0 #n I
clear
{ 4 { 4 54 4 4 5 } 2.65 } 1 #n #
clear
5 { [ dup * ] 2 3 } 0 #n I
clear
{ 4 { 4 5 } 2 } [ # ] [ 2 #n ] bi
clear
{ { 3 4 5 { 1 9 } } 4 } 0 #n 3 #n 1 #n dup *
clear
{ 1 2 3 } { 4 5 } cat /+
clear
{ 10 sq 20 sq } 0 #n
clear
10 { [ sq ] I }
clear
10 { [ sq ] [ double ] bi }
clear
q
